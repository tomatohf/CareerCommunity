求职管家:
	删除添加的公司 和 职位 - 处理已经关联的目标
	删除添加的流程 和 状态 - 处理已经关联的步骤


将活动功能包装成一个 APP
Enhance 活动的功能
	- 地图调用
	- 天气情况调用


求职小组 自定义圈子
	申请求职教练
	提交免费修改简历
	
		
加更多的 cache ...

用户是否在线

发起话题的 动态  -- 似乎没什么必要...

更多的 atom feed




new recruitment vendors - guolairen, www.xyzp.net(卖我网)

highlight 活动日历上有活动的日子

投票交叉分析, 投票构成

发邀请 email
邀请 hotmail gmail yahoo 联系人


将重启服务器的命令添加到部署文件,在更新代码后自动执行


HR交流圈子:
	自定义用户属性，金币
	自定义界面，静态首页
	博客文章分类



Ruby Patch of the GC for Rails
	需要重新编译 Ruby
	
	
	


好友动态 & 系统消息
	显示的时候 用户查询的 N+1 问题

圈子功能
	邀请发送 email ... ???
	在圈子页面上 接受或拒绝加入圈子的邀请



Voting
	给 VoteClient.swf 搜身 - 减小 SWF 文件大小

	


Flash 做个很炫很酷的照片演示，并且可支持离开网站使用
读取在线图片的 -> http://www.51flash.cn/?p=383
嵌入图片，使用 Ming ... and Ming-Ruby ?
http://www.libming.org/
http://madscientist.jp/~ikegami/ruby/ming/


Vote client ???



用户的profile
	积分 - 积分当钱用？
		等级？
		头衔？
	货币 - 用来买课程，我们会赠送


照片 和 博客 的 tag  功能








sql注入 检测工具

图片加水印
http://www.javaeye.com/topic/107055

批量修改照片页面

SWFUpload 上传大小超过 3M 的文件, server 端会抛错, client 端会一直等待 ...

添加对 从确认邮件登录 的介绍，而可以是一张页面，最好是一些 inline 的 tip

工具箱里搞点 性格测验一类的东西
放 Flash 游戏

修改 email 地址

所有的删除功能都必须非常的小心，确保相关的东西都妥善处理

更快的模板？
Tenjin - http://www.kuwata-lab.com/tenjin/


======

Denpendencies:
	Hpricot
	RMagic (ImageMagic)
	memcache-client
	paperclip
	mime-types
	mislav-will_paginate (gem install mislav-will_paginate --source http://gems.github.com/)
	select_with_include
	freelancing-god-thinking-sphinx (gem install freelancing-god-thinking-sphinx --source http://gems.github.com)
	contacts
	-----
	
======


Rails 异常监控   ===>   http://dev.rubyonrails.org/svn/rails/plugins/exception_notification/README


======

respond_to do |wants|
	wants.text
	wants.html
	wants.js
	wants.ics
	wants.xml
	wants.rss
	wants.atom
	wants.yaml
ends


======显示用户是否在线======
		一个非常有用的功能，在application全局的角度获取不同用户的session信息
		
		程序代码 程序代码
		
		@user=CGI::Session::ActiveRecordStore::Session.find_by_session_id(@session_id).data[:user]
		
		
		http://webonrails.com/2006/12/08/accessing-session-data-using-session_id/
		
		看看那些用户在线
		程序代码 程序代码
		
		def who_is_online
		  @whos_online = Array.new()
		  onlines = CGI::Session::ActiveRecordStore::Session.find( :all, :conditions => [ 'updated_at = ?',  Time.now() - 10.minutes ] )
		  onlines.each do |online|
		    id = Marshal.load( Base64.decode64( online.data ) )
		    @whos_online << id[ :member_id ]
		  end
		  return @whos_online
		end
		
		
		http://matt-beedle.com/2006/12/13/rails-how-to-find-out-who-is-online/ 
======显示用户是否在线======


